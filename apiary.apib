FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Code Challenge API
      
Documentation for Ora's Code Challenge API Service
      
__Version 3.0 - Compiled by Andre Sugai__
      
Questions or comments? Email [andre@orainteractive.com](mailto:andre@orainteractive.com)

## The Challenge

The API describes a simple chat application.

A user can: 
- register
- login
- view their profile
- edit their profile
- list all chats
- create a chat
- view all messages in a chat
- create a message in a chat

__How much or how little development time you spend on the code challenge is up to you - we are simply looking for something that exemplifies your work.__

## Submission

###Versioning system
At Ora, we use [Github](http://github.com) for all of our code versioning. We would like you to deliver a well constructed github repository where we can find your work.

We will be looking to review how you setup your commits as well as issues (if applicable).

#### Note

All submissions should be accompanied by any necessary compilation or deployment instructions in a README file in the repository.

## Requirements

### iOS and Android
Your challenge is to build a small application following best practices that interacts with the API specified in this document.

UX for app:
- [Android](https://www.dropbox.com/s/7bnxed58z4cb4kg/InstaChat.zip?dl=0)
- iOS coming soon - use Android in the meantime as basis

### PHP and Ruby on Rails
Your challenge is to build the API specified in this document using a PHP framework or Ruby on Rails.

We recommend these frameworks for PHP:
- [CakePHP](cakephp.org)
- [Laraval](http://laravel.com/)
- For Ruby, you should use Rails.

## Time limit

Your time limit is 5 days after the you receive this challenge.

If you need more time, please email [andre@orainteractive.com](mailto:andre@orainteractive.com) to let us know.

## Standards

Use best practices for coding style, unit testing, etc.

We recommend:
- Objective C - [Programming with Objective-C Conventions](https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Conventions/Conventions.html)
- Android - [Android Code Style Guidelines](https://source.android.com/source/code-style.html)
- PHP - [PHP-FIG](http://www.php-fig.org/)
- Ruby on Rails - [Rails](https://github.com/bbatsov/rails-style-guide), [Ruby](https://github.com/bbatsov/ruby-style-guide)

## Packages, Plugins, and Reusable Code

Use packages, gems, plugins, cocoapods, etc. as needed.

Any plugin used should also follow stardards and best practices.

# Group Endpoints

## User [/user]

+ Model (application/json; charset=utf-8)
    
        {
          "success": true,
          "data": {
            "id": 1,
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w",
            "email": "andre@orainteractive.com",
            "name": "andre"
          }
        }

### Register [POST /users/register]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
            
    + Body
    
            { 
                "email": "andre@orainteractive.com",
                "password": "test123",
                "confirm": "test123"
            }

+ Response 201
    [User][]
        
            
### Login [POST /users/login]
+ Request (application/json; charset=utf-8)

    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
            
    + Body
    
            {
                "email": "andre@orainteractive.com",
                "password": "test123"
            }

+ Response 200
    [User][]

### View [GET /users/me]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w

+ Response 200
    [User][]

### Edit [PUT /users/me]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
    
    + Body

            {
                "email": "andre@orainteractive.com",
                "password": "test123"
            }

+ Response 201 (application/json; charset=utf-8)

        {
            "success": true,
            "data": {
                "id": 1,
                "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w",
                "email": "andre@orainteractive.com"
            }
        }

# Chat [/chats]

### List [GET]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w

    + Body
    
            { 
                "page": 1,
                "limit": 20
            } 

+ Response 200 (application/json; charset=utf-8)

        {
            "success": true,
            "data": [{
                "id": 1,
                "user_id": 1,
                "name": "A Chat"
            },
            {
              "id": 2,
              "user_id": 1,
              "name": "A Chat 2"
            }],
            "pagination": {
                "page_count": 1,
                "current_page": 1,
                "has_next_page": false,
                "has_prev_page": false,
                "count": 1,
                "limit": null
            }
        }

### Create [POST]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
            
    + Body
    
            { 
                "email": "andre@orainteractive.com",
                "password": "test123",
                "confirm": "test123"
            }

+ Response 201 (application/json; charset=utf-8)

        {
            "success": true,
            "data": {
                "id": 1,
                "user_id": 1,
                "name": "A Chat"
            }
        }
        
# Messages [/chats/{chat_id}/messages]

+ Parameters
    + chat_id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.
    
### List [GET]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
            

+ Response 200 (application/json; charset=utf-8)

        {
            "success": true,
            "data": [{
                "id": 1,
                "chat_id": 1,
                "user_id": 1,
                "message": "Hey there!",
                "user": {
                    "id": 1,
                    "name": "andre"
                }
            },
            {
              "id": 2,
              "chat_id": 1,
              "user_id": 2,
              "message": "Oh hey!",
              "user": {
                "id": 2,
                "name": "dan"
              }
            }],
            "pagination": {
                "page_count": 1,
                "current_page": 1,
                "has_next_page": false,
                "has_prev_page": false,
                "count": 2,
                "limit": null
            }
        }

### Create [POST]
+ Request (application/json; charset=utf-8)
    
    + Headers

            Accept: application/json
            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNDM0NDY3NDUxfQ.Or5WanRwK1WRqqf4oeIkAHRYgNyRssM3CCplZobxr4w
            
    + Body
    
            { 
                "message": "Hey there!"
            }

+ Response 201 (application/json; charset=utf-8)

        {
            "success": true,
            "data": {
                "id": 1,
                "chat_id": 1,
                "user_id": 1,
                "message": "Hey there!",
                "user": {
                    "id": 1,
                    "name": "andre"
                }
            }
        }